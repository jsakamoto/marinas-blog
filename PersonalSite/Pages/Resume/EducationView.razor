@using PersonalSite.Models
@using PersonalSite.Markdown

@{
    var education = Model;

    var now = EducationExtensions.GetNowDate();

    var startDate = education.GetStartDate();
    DateTime? endDate = education.GetEndDate();
}

<div class="mb-4" style="page-break-inside: avoid;">
        <h3>@education.School</h3>

        <p>@education.FieldOfStudy</p>

        <p class="text-muted meta">@startDate.Humanize(endDate) â€¢ @startDate.Humanize2(endDate)<br />@education.Location</p>

        @if(ShowMore) 
        {
            <MarkdownView Content="@education.Description" />

            if(education.Activities?.Any() ?? false)
            {
                <dl class="mt-4">
                    <dt>Activities</dt>
                    <dd>@string.Join(", ", education.Activities)</dd>
                </dl>
            }

            @if(education.Courses?.Any() ?? false)
            {
                <dl class="mt-4">
                    <dt>Courses</dt>
                    <dd>@string.Join(", ", education.Courses)</dd>
                </dl>
            }
            <small><a href="#" @onclick="ToggleShowMore" @onclick:preventDefault><i class="fa fa-chevron-up me-1"></i> Show less</a></small>
        }
        else 
        {
            var breakIndex = education.Description.IndexOf(".");
            if(breakIndex == -1)
            {
                breakIndex = education.Description.IndexOf("\n");
            }
            var content = breakIndex == -1 ? education.Description : education.Description.Substring(0, breakIndex + 1);

            <MarkdownView Content="@content" />
            
            <small><a href="#" @onclick="ToggleShowMore" @onclick:preventDefault><i class="fa fa-chevron-down me-1"></i> Show more</a></small>
        }
    </div>

@code {
    [Parameter]
    [EditorRequired]
    public Education Model { get; set;} = null!;

    [Parameter]
    public bool ShowMore { get; set; }

    void ToggleShowMore() 
    {
        ShowMore = !ShowMore;
    }
}