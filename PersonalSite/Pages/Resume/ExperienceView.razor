@using PersonalSite.Models
@using PersonalSite.Markdown

@{
    var experience = Model.experience;

    var now = ExperienceExtensions.GetNowDate();

    var startDate = experience.GetStartDate();
    DateTime? endDate = experience.GetEndDate();
}

@if(Model.isSub) 
{
    <p>@experience.EmploymentType</p>
}
else 
{
    <p>@experience.Company • @experience.EmploymentType</p>
}

<p class="text-muted meta">@startDate.Humanize(endDate) • @startDate.Humanize2(endDate)<br />@experience.Location</p>

@if(ShowMore) 
{
    <div class="mb-4">
        <MarkdownView Content="@experience.Description" />
    </div>
    
    @if(experience.Skills?.Any() ?? false)
    {
        <dl class="mt-4">
            <dt>Skills</dt>
            <dd><small>@string.Join(" · ", experience.Skills)</small></dd>
        </dl>
    }

    <small><a href="#" @onclick="ToggleShowMore" @onclick:preventDefault><i class="fa fa-chevron-up me-1"></i> Show less</a></small>
}
else 
{
   var breakIndex = experience.Description.IndexOf(".");
   if(breakIndex == -1)
   {
       breakIndex = experience.Description.IndexOf("\n");
   }
   var content = breakIndex == -1 ? experience.Description : experience.Description.Substring(0, breakIndex + 1);

    <div class="mb-4">
        <MarkdownView Content="@content" />
   </div>

    <small><a href="#" @onclick="ToggleShowMore" @onclick:preventDefault><i class="fa fa-chevron-down me-1"></i> Show more</a></small>
}

@code {
    [Parameter]
    public bool ShowMore { get; set; }

    [Parameter]
    [EditorRequired]
    public Obj Model { get; set; }

    void ToggleShowMore() 
    {
        ShowMore = !ShowMore;
    }
}